//
//  SwaggerPetstore
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#include "Status2EnumHelper.h"

/**
* Helper class implementation for Status2Enum to NSString conversion
*/
@implementation Status2EnumHelper

+(id) stringFromStatus2Enum:(enum Status2Enum) status2Enum withDefault: (id) defaultValue
{
    switch(status2Enum)
    {
        case Status2Available:
            return @"available";

        case Status2Pending:
            return @"pending";

        case Status2Sold:
            return @"sold";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromStatus2EnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [Status2EnumHelper stringFromStatus2Enum:(enum Status2Enum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum Status2Enum) status2EnumFromString:(NSString*) strValue
{
    NSArray* Status2EnumArray = [NSArray arrayWithObjects:
                                        @"available",
                                        @"pending",
                                        @"sold",
                                        nil];

    return (enum Status2Enum) [Status2EnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) status2EnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ Status2EnumHelper status2EnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end